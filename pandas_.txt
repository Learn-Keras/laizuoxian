23:51 2019/12/5
https://www.cnblogs.com/lichunl/p/9280157.html#_label1
2.1、导入所需模块：

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
#创建对象：

s = pd.Series([1,3,5,np.nan,6,8])       Series：

dates = pd.date_range('20130101', periods=6)  可以利用字典创建DataFrame

查看数据：
--------------------------------------------------------------------------------------------
df.head() #查看数据开头几行，默认5行

df.tail(3) #查看数据结尾3行

单独查看数据的索引、列名、值：

df.index

df.columns

df.values

describe()显示数据统计概要：

df.describe()：

Out[19]:
              A         B         C         D
count  6.000000  6.000000  6.000000  6.000000
mean   0.073711 -0.431125 -0.687758 -0.233103
std    0.843157  0.922818  0.779887  0.973118
min   -0.861849 -2.104569 -1.509059 -1.135632
25%   -0.611510 -0.600794 -1.368714 -1.076610
50%    0.022070 -0.228039 -0.767252 -0.386188
75%    0.658444  0.041933 -0.034326  0.461706
max    1.212112  0.567020  0.276232  1.071804


df.T  转置数据

df.sort_index(axis=1, ascending=False) # axis=0排序行，ascending=F 递减  按index排序

df.sort_values(by='B') #根据B值排序， 默认ascending =T 递增  按值排序
--------------------------------------------------------------------------------------------
选择数据：
loc:(通过标签选择) df.loc:
通过列名选择列： df['A'] 、
通过 [ ] 选择行：df[0:3]
根据标签选择：df.loc[dates[0]] # 等于df.loc["2013-01-01"]
根据多轴标签选择：df.loc[:,['A','B']]
根据行和列选择：df.loc['20130102':'20130104',['A','B']]

iloc:( 通过整数的位置坐标选择)
通过位置坐标切片:  df.iloc[3:5,0:2] # 第3-5行的0-2列，不包括5和2
通过整数坐标列表选择: df.iloc[[1,2,4],[0,2]]

条件选取（bool选择):

通过列值大小索引：df[df.A > 0] #列A大于0的行选出来

整个DateFrame 选择： df[df > 0] #不符合条件的变成了NAN

利用isin() 过滤选择：df2[df2['E'].isin(['two','four'])]

--------------------------------------------------------------------------------------------
修改数据　：

通过索引自动把列组合进数据：
df['F'] = s1 #相同索引自动组合

df.at[dates[0],'A'] = 0 #更改0，“A”这个位置的值为0

df.iat[0,1] = 0  #更改0,1位置的值为0

df.loc[:,'D'] = np.array([5] * len(df)) #把D列全改为5

//////////////////////////////////////////////////////////////////

reindex（）允许修改、删除、增加 index

df1.dropna(how='any')      删除带有空值得行

df1.fillna(value=5)        填充空值

pd.isna(df1)            是nan就显示ture

--------------------------------------------------------------------------------------------
 统计：

df.mean() #各列的均值
df.mean(1) #各行的均值

shift() 索引不变数据下移个数，sub() 减法：
pd.Series([1,3,5,np.nan,6,8], index=dates).shift(2) # 原数据是 1,3,5，nan, 6,8 ,下移2

df.sub(s, axis='index') #每一列都减去s ， 值-NAN = NAN





























































